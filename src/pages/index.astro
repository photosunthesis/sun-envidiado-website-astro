---
import BaseLayout from "../layouts/BaseLayout.astro";
import SpinningSunAsciiArt from "../components/SpinningSunAsciiArt.astro";

const introHeading = `Hi, I'm Sun, a programmer from the Philippines. Welcome to my little corner of the internet.`;
const introBody = `I enjoy building software, playing games (currently hooked on Helldivers 2), and singing at karaoke. Here, you'll find my thoughts on coding, gaming, and life.`;

type CommandHint = {
	type: string;
	command: string;
	description: string;
	href: string;
};

const commandHints: CommandHint[] = [
	{
		type: "type or tap",
		command: ":about<Enter>",
		description: "to learn more about me.",
		href: "/about",
	},
	{
		type: "type or tap",
		command: ":contact<Enter>",
		description: "to get in touch.",
		href: "/contact",
	},
	{
		type: "type or tap",
		command: ":blog<Enter>",
		description: "to read my latest blogs.",
		href: "/blog",
	},
];
---

<BaseLayout title="Sun Envidiado">
	<div class="index-main-content">
		<SpinningSunAsciiArt />
		<div class="intro-container">
			<span class="intro-heading">{introHeading}</span>
			<span class="intro-body">{introBody}</span>
		</div>
		<div class="command-hints-container">
			{
				commandHints.map((hint) => (
					<div class="command-hint-row">
						<span class="command-hint-type">{hint.type}</span>
						<a
							class="command-hint-command"
							href={hint.href}
							aria-label={"Go to " + hint.href}
						>
							{hint.command}
						</a>
						<span class="command-hint-description">{hint.description}</span>
					</div>
				))
			}
		</div>
	</div>
</BaseLayout>

<style>
	/* Scoped index page styles (extracted from global.css) */
	.index-main-content {
		margin-top: -3rem;
	}

	.intro-container {
		max-width: 450px;
		margin: 0 auto;
		color: var(--foreground);
		font-size: 1rem;
		line-height: 1.2;
		text-align: center;
		white-space: pre-line;
	}

	.intro-heading {
		display: block;
		text-align: center;
		font-weight: 600;
		margin-bottom: 1em;
	}

	.intro-body {
		display: block;
		text-align: justify;
	}

	.command-hints-container {
		width: 100%;
		max-width: 450px;
		margin: 1rem auto 0 auto;
		color: var(--comment);
		font-size: 0.95rem;
		display: flex;
		flex-direction: column;
		gap: 0.2rem;
		align-items: center;
	}

	.command-hint-row {
		width: 100%;
		box-sizing: border-box;
		min-height: 1.8em;
		display: grid;
		grid-template-columns: minmax(10ch, max-content) minmax(10ch, max-content) 1fr;
		align-items: center;
		gap: 1.5ch;
		white-space: nowrap;
		margin: 0 auto;
	}

	.command-hint-type {
		color: var(--foreground);
		font-family: inherit;
		text-align: left;
		padding-right: 0.6ch;
	}

	.command-hint-command {
		color: var(--cyan);
		font-family: inherit;
		text-align: center;
		font-weight: 600;
		justify-self: left;
	}

	.command-hint-command[href]:hover,
	.command-hint-command[href]:focus {
		text-decoration: underline;
	}

	.command-hint-description {
		color: var(--foreground);
		font-family: inherit;
		text-align: right;
		white-space: pre;
		min-width: 0;
		justify-self: end;
	}

	@media (max-width: 600px) {
		.intro-heading {
			text-align: left;
		}

		.intro-body {
			text-align: left;
		}

		.index-main-content {
			padding: 0 2rem;
			align-items: flex-start;
			text-align: left;
		}

		.command-hint-row {
			display: block;
			gap: 0;
			grid-template-columns: none;
			white-space: normal;
			padding: 0.35rem 0;
		}

		.command-hint-type,
		.command-hint-command,
		.command-hint-description {
			display: inline;
			vertical-align: baseline;
			text-align: left;
			white-space: normal;
			padding: 0;
		}

		.command-hint-type::after {
			content: " ";
		}

		.command-hint-command::before {
			content: " ";
		}

		.command-hint-command::after {
			content: " ";
			color: var(--comment);
		}

		.command-hint-description {
			color: var(--foreground);
		}
	}
</style>
