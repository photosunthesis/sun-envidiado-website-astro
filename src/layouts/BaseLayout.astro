---
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";
import CommandBar from "../components/CommandBar.astro";
import "../styles/main.scss";

const SITE_CONFIG = {
	siteName: "Sun Envidiado",
	authorName: "Sun Envidiado",
	defaultDescription: "Personal website where I share my thoughts about anything and everything.",
	defaultImage: "/android-chrome-512x512.png",
	siteUrl: "https://sun-envidiado.com",
	skipLinkText: "Skip to content",
	skipLinkAria: "Skip to main content",
	backUrlLabel: ":back<Enter>",
	homeUrlLabel: ":home<Enter>",
	blogFooter: {
		prefix: "Type",
		returnSuffix: "to return to the previous page, or",
		homeSuffix: "to go to the homepage.",
	},
};

// Load frontmatter from props
const { frontmatter = {} } = Astro.props;

const title = frontmatter.title || SITE_CONFIG.siteName;
const description = frontmatter.description || SITE_CONFIG.defaultDescription;
const pubDate = frontmatter.pubDate;
const tags = frontmatter.tags || [];
const noIndex = frontmatter.noIndex || false;
const jsonLd = frontmatter.jsonLd || null;
const type = pubDate ? "article" : "website";

// Load cover image if specified in frontmatter
let coverImage: ImageMetadata | undefined;

if (frontmatter.cover) {
	try {
		const images = import.meta.glob<{ default: ImageMetadata }>(
			"/src/pages/blog/**/*.{jpeg,jpg,png,gif,webp}",
		);
		const imagePath = `/src/pages/blog/${frontmatter.cover.replace("./", "")}`;

		if (images[imagePath]) {
			const imageModule = await images[imagePath]();
			coverImage = imageModule.default;
		}
	} catch (e) {
		console.error("Failed to load cover image:", e);
	}
}

// Generate canonical and meta image URLs
const baseUrl = Astro.site || SITE_CONFIG.siteUrl;
const canonical = new URL(Astro.url.pathname, baseUrl).toString();

const defaultImageUrl = new URL(SITE_CONFIG.defaultImage, baseUrl).toString();
const metaImage = coverImage ? new URL(coverImage.src, baseUrl).toString() : defaultImageUrl;
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<title>{title}</title>

		<!-- Cloudflare Web Analytics -->
		<script
			defer
			src="https://static.cloudflareinsights.com/beacon.min.js"
			data-cf-beacon='{"token": "d9d31592b1ef4f86a7bf89125c54227e"}'></script>

		<!-- Primary Meta Tags -->
		<meta name="theme-color" content="#09090b" />
		<meta name="msapplication-navbutton-color" content="#09090b" />
		<meta name="mobile-web-app-capable" content="yes" />
		<meta name="apple-mobile-web-app-status-bar-style" content="#09090b" />
		<meta name="description" content={description} />
		<meta name="robots" content={noIndex ? "noindex, nofollow" : "index, follow"} />
		<link rel="canonical" href={canonical} />
		<meta name="referrer" content="no-referrer-when-downgrade" />
		<meta name="color-scheme" content="light dark" />
		<meta name="author" content={SITE_CONFIG.authorName} />
		<link rel="sitemap" href="/sitemap-index.xml" />

		{pubDate && <meta property="article:published_time" content={pubDate} />}
		{
			Array.isArray(tags) &&
				tags.length > 0 &&
				tags.map((tag: string) => <meta property="article:tag" content={tag} />)
		}

		<!-- Open Graph / Facebook -->
		<meta property="og:site_name" content={title} />
		<meta property="og:type" content={type} />
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description} />
		<meta property="og:url" content={canonical} />
		<meta property="og:image" content={metaImage} />

		<!-- Twitter -->
		<meta name="twitter:card" content={metaImage ? "summary_large_image" : "summary"} />
		<meta
			name="twitter:site"
			content={`@${SITE_CONFIG.siteName.replace(/\s+/g, "").toLowerCase()}`}
		/>
		<meta name="twitter:title" content={title} />
		<meta name="twitter:description" content={description} />
		<meta name="twitter:image" content={metaImage} />

		<slot name="seo" />

		<!-- Site resources -->
		<link
			rel="preload"
			href="/fonts/Web437_ToshibaSat_8x14.woff2"
			as="font"
			type="font/woff2"
			crossorigin
		/>
		<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
		<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
		<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
		<link rel="manifest" href="/site.webmanifest" />

		<!-- Minimal skip-link styles (hidden visually, visible on keyboard focus) -->
		<style>
			.skip-link {
				position: absolute;
				left: -999px;
				top: auto;
				width: 1px;
				height: 1px;
				overflow: hidden;
				z-index: -999;
			}
			.skip-link:focus {
				position: fixed;
				left: 1rem;
				top: 1rem;
				width: auto;
				height: auto;
				padding: 0.5rem 1rem;
				background: #111;
				color: #fff;
				z-index: 1000;
			}
		</style>
		{jsonLd && <script type="application/ld+json" set:html={JSON.stringify(jsonLd)} />}
	</head>
	<body class="vim-root crt-text-ca">
		<script src="/src/scripts/crtPreference.ts"></script>
		<!-- Skip link for keyboard users -->
		<a class="skip-link" href="#main" aria-label={SITE_CONFIG.skipLinkAria}
			>{SITE_CONFIG.skipLinkText}</a
		>

		<div class="main-flex-container">
			<main id="main" class="vim-main-content" tabindex="-1">
				<div class="centered-vim">
					{
						pubDate ? (
							<div class="blog-layout">
								{coverImage && (
									<div class="cover-image-wrapper">
										<Image src={coverImage} alt={frontmatter.coverAlt || "Cover image"} inferSize />
									</div>
								)}
								<h1 id="post-title" class="blog-title">
									{title}
								</h1>
								<p class="post-pub-date">
									{new Date(pubDate).toLocaleDateString("en-US", {
										year: "numeric",
										month: "long",
										day: "numeric",
									})}
								</p>

								<article class="blog-article" aria-labelledby="post-title">
									<slot />
								</article>

								<footer
									class="blog-footer"
									role="contentinfo"
									aria-label="Post navigation and actions"
								>
									<p class="blog-footer-text">
										{SITE_CONFIG.blogFooter.prefix}
										<button
											class="link-like"
											type="button"
											onclick="history.back();"
											aria-label="Go back"
										>
											{SITE_CONFIG.backUrlLabel}
										</button>
										{` ${SITE_CONFIG.blogFooter.returnSuffix} `}
										<a href="/" aria-label="Go to homepage">
											{SITE_CONFIG.homeUrlLabel}
										</a>
										{` ${SITE_CONFIG.blogFooter.homeSuffix}`}
									</p>
								</footer>
							</div>
						) : (
							<slot />
						)
					}
				</div>
			</main>
		</div>
		<CommandBar />
		<!-- CSS-only CRT Overlay Container (controlled by user preference) -->
		<div id="crt-overlay-container" class="crt-enabled"></div>
	</body>
</html>
